<Project>

  <Target Name="SetupTestContextVariables"
          DependsOnTargets="
            GetProductVersions;
            DetermineTestOutputDirectory"
          BeforeTargets="Build">
    <PropertyGroup>
      <!--
        The tests use the TEST_ARTIFACTS variable to determine the artifacts folder and then later
        compare that path to its expected path. So, the TEST_ARTIFACTS variable has to have system
        specific path separators or the string compoarison will fail.
      -->
      <DirectorySeparatorChar>$([System.IO.Path]::DirectorySeparatorChar)</DirectorySeparatorChar>
      <SystemPathTestsOutputDir>$([System.String]::Copy('$(TestsOutputDir)').Replace('/', '$(DirectorySeparatorChar)'))</SystemPathTestsOutputDir>
      <SystemPathTestsOutputDir>$([System.String]::Copy('$(SystemPathTestsOutputDir)').Replace('\', '$(DirectorySeparatorChar)'))</SystemPathTestsOutputDir>

      <!-- This is defined when building in Visual Studio, not DotNetRoot. -->
      <DotNetRoot Condition="'$(DotNetRoot)' == ''">$(NetCoreRoot)</DotNetRoot>
    </PropertyGroup>

    <!--
      Fetch the package version of Microsoft.WindowsDesktop.App. Use the runtime nupkg project
      because it always ships.

      Some test projects end in ".Tests", which Arcade detects and applies IsShipping=false. This
      makes ProductVersion non-stable, so we can't rely on the test project's ProductVersion to be
      the same as the package's version. Fetch this directly from the project to avoid guesswork.
    -->
    <MSBuild
      Projects="$(RepoRoot)pkg\windowsdesktop\pkg\Microsoft.WindowsDesktop.App.Runtime.pkgproj"
      Targets="ReturnProductVersion">
      <Output TaskParameter="TargetOutputs" PropertyName="WindowsDesktopRuntimeVersion" />
    </MSBuild>

    <!--
      Set up properties used inside tests. Write them to a text file so that they can be found
      inside the VS Test Explorer context the same way as the XUnit runner will find them.
      See https://github.com/dotnet/arcade/issues/3077.
    -->
    <ItemGroup>
      <TestContextVariable Include="NUGET_PACKAGES=$(TestRestorePackagesPath)" />
      <TestContextVariable Include="TEST_ARTIFACTS=$(SystemPathTestsOutputDir)" />
      <TestContextVariable Include="TEST_TARGETRID=$(TestTargetRid)" />
      <TestContextVariable Include="BUILDRID=$(OutputRid)" />
      <TestContextVariable Include="BUILD_ARCHITECTURE=$(TargetArchitecture)" />
      <TestContextVariable Include="BUILD_CONFIGURATION=$(ConfigurationGroup)" />
      <TestContextVariable Include="MNA_VERSION=$(WindowsDesktopRuntimeVersion)" />
      <TestContextVariable Include="MNA_TFM=$(NETCoreAppFramework)" />
      <TestContextVariable Include="DOTNET_SDK_PATH=$(DotNetRoot)" />
    </ItemGroup>

    <WriteLinesToFile
      File="$(OutDir)TestContextVariables.txt"
      Overwrite="true"
      Lines="@(TestContextVariable)" />
  </Target>

  <Target Name="DetermineTestOutputDirectory">
    <GetTargetMachineInfo>
      <Output TaskParameter="RuntimeIdentifier" PropertyName="_HostRid" />
    </GetTargetMachineInfo>

    <PropertyGroup>
      <TestTargetRid Condition="'$(TestTargetRid)' == ''">$(_HostRid)</TestTargetRid>
      <TestsOutputName Condition="'$(TestsOutputName)' == ''">$(MSBuildProjectName)</TestsOutputName>

      <TestsOutputRootDir Condition="'$(TestsOutputRootDir)' == ''">$(ArtifactsDir)tests/$(ConfigurationGroup)/</TestsOutputRootDir>
      <TestsOutputDir Condition="'$(TestsOutputDir)' == ''">$(TestsOutputRootDir)$(TestsOutputName)/</TestsOutputDir>
    </PropertyGroup>
  </Target>

  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory).., Directory.Build.targets))\Directory.Build.targets" />
</Project>
