# This Yaml Document has been converted by ESAI Yaml Pipeline Conversion Tool.
# Please make sure to check all the converted content, it is your team's responsibility to make sure that the pipeline is still valid and functions as expected.
# This pipeline will be extended to the MicroBuild template
trigger:
  batch: true
  branches:
    include:
    - main
    - release/*
    - internal/release/*
    - experimental/*
pr:
- main
- release/*
- experimental/*
name: $(Date:yyyyMMdd)$(Rev:.r)
variables:
- name: TeamName
  value: dotnet-core-acquisition
- name: SkipTests
  value: false
- name: OfficialBuildId
  value: $(Build.BuildNumber)
- ${{ if or(startswith(variables['Build.SourceBranch'], 'refs/heads/release/'), startswith(variables['Build.SourceBranch'], 'refs/heads/internal/release/'), eq(variables['Build.Reason'], 'Manual')) }}:
  - name: PostBuildSign
    value: false
- ${{ else }}:
  - name: PostBuildSign
    value: true
- name: _DotNetArtifactsCategory
  value: .NETCore
- name: _DotNetValidationArtifactsCategory
  value: .NETCoreValidation
- ${{ if or(eq(variables['System.TeamProject'], 'public'), in(variables['Build.Reason'], 'PullRequest')) }}:
  - name: SignType
    value: test
- ${{ if and(ne(variables['System.TeamProject'], 'public'), notin(variables['Build.Reason'], 'PullRequest')) }}:
  - name: SignType
    value: $[ coalesce(variables.OfficialSignType, 'real') ]
resources:
  repositories:
  - repository: MicroBuildTemplate
    type: git
    name: 1ESPipelineTemplates/MicroBuildTemplate
    ref: refs/tags/release
extends:
  template: azure-pipelines/MicroBuild.1ES.Official.yml@MicroBuildTemplate
  parameters:
    sdl:
      sourceAnalysisPool:
        name: $(DncEngInternalBuildPool)
        image: 1es-windows-2022-pt
      os: windows
    customBuildTags:
    - ES365AIMigrationTooling
    stages:
    - stage: Build
      jobs:
      - template: /eng/pipelines/jobs/windows-build.yml@self
        parameters:
          name: win_x64
          targetArchitecture: x64
      - template: /eng/pipelines/jobs/windows-build.yml@self
        parameters:
          name: win_x86
          targetArchitecture: x86
      - template: /eng/pipelines/jobs/windows-build.yml@self
        parameters:
          name: win_arm64
          targetArchitecture: arm64
    - ${{ if and(ne(variables['System.TeamProject'], 'public'), notin(variables['Build.Reason'], 'PullRequest')) }}:
      - stage: PrepareForPublish
        displayName: Prepare for Publish
        dependsOn: Build
        jobs:
        - template: /eng/pipelines/jobs/prepare-signed-artifacts.yml@self
          parameters:
            PublishRidAgnosticPackagesFromJobName: win_x64
        - template: /eng/common/templates-official/job/publish-build-assets.yml@self
          parameters:
            publishUsingPipelines: true
            publishAssetsImmediately: true
            dependsOn: PrepareSignedArtifacts
            pool:
              name: $(DncEngInternalBuildPool)
              image: windows.vs2022preview.amd64
      - template: /eng/common/templates-official/post-build/post-build.yml@self
        parameters:
          publishingInfraVersion: 3
          validateDependsOn:
          - PrepareForPublish
          enableSymbolValidation: false
          enableSigningValidation: false
          enableNugetValidation: false
          enableSourceLinkValidation: false
          publishAssetsImmediately: true
          SDLValidationParameters:
            enable: false
            params: >-
              -SourceToolsList @("policheck","credscan") -TsaInstanceURL https://devdiv.visualstudio.com/ -TsaProjectName DEVDIV -TsaNotificationEmail wffteam@microsoft.com -TsaCodebaseAdmin REDMOND\advolker -TsaBugAreaPath "DevDiv\NET Fundamentals\WindowsDesktop" -TsaIterationPath DevDiv -TsaRepositoryName WindowsDesktop -TsaCodebaseName WindowsDesktop -TsaOnboard $True -TsaPublish $True