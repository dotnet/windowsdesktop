# This Yaml Document has been converted by ESAI Yaml Pipeline Conversion Tool.
# Please make sure to check all the converted content, it is your team's responsibility to make sure that the pipeline is still valid and functions as expected.
# The Task 'PublishBuildArtifacts@1' has been converted to an output named 'Publish Artifact BuildLogs' in the templateContext section.
# Output added to job "PrepareSignedArtifacts" with YAML conditionals extracted using AI. Review this expression against the originating file for correctness.
parameters:
  dependsOn: []
  PublishRidAgnosticPackagesFromJobName: ''
jobs:
- job: PrepareSignedArtifacts
  displayName: Prepare Signed Artifacts
  dependsOn: ${{ parameters.dependsOn }}
  pool:
    name: NetCore1ESPool-Svc-Internal
    demands: ImageOverride -equals windows.vs2019.amd64
  timeoutInMinutes: 120
  workspace:
    clean: all
  templateContext:
    mb:
      ${{ if and(ne(variables['System.TeamProject'], 'public'), notin(variables['Build.Reason'], 'PullRequest')) }}:
      - signing:
          enabled: true
          feedSource: https://dnceng.pkgs.visualstudio.com/_packaging/MicroBuildToolset/nuget/v3/index.json
          signType: $(SignType)
          zipSources: false
    outputs:
    - output: pipelineArtifact
      displayName: 'Publish Artifact BuildLogs'
      condition: succeededOrFailed()
      targetPath: '$(Build.StagingDirectory)\BuildLogs'
      artifactName: Logs-PrepareSignedArtifacts
  steps:
  - ${{ if and(ne(variables['System.TeamProject'], 'public'), notin(variables['Build.Reason'], 'PullRequest')) }}:
    - task: NuGetAuthenticate@1
  - task: DownloadBuildArtifacts@0
    displayName: Download IntermediateUnsignedArtifacts
    inputs:
      artifactName: IntermediateUnsignedArtifacts
      downloadPath: $(Build.SourcesDirectory)\artifacts\PackageDownload
  - script: >
      build.cmd -ci -projects $(Build.SourcesDirectory)\src\publish\prepare-artifacts.proj -c Release /p:PublishRidAgnosticPackagesFromJobName=${{ parameters.PublishRidAgnosticPackagesFromJobName }} /p:SignType=$(SignType) /p:DotNetSignType=$(SignType) /bl:$(Build.SourcesDirectory)\prepare-artifacts.binlog
    displayName: Prepare artifacts and upload to build
  - task: CopyFiles@2
    displayName: Copy Files to $(Build.StagingDirectory)\BuildLogs
    inputs:
      SourceFolder: '$(Build.SourcesDirectory)'
      Contents: |
        **/*.log
        **/*.binlog
      TargetFolder: '$(Build.StagingDirectory)\BuildLogs'
    continueOnError: true
    condition: succeededOrFailed()