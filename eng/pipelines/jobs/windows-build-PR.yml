parameters:
  additionalMSBuildArguments: ''
  displayName: ''
  skipTests: $(SkipTests)
  targetArchitecture: null
  timeoutInMinutes: 120

jobs:
  - job: ${{ parameters.name }}
    displayName: ${{ parameters.displayName }}
    timeoutInMinutes: ${{ parameters.timeoutInMinutes }}
    pool:
      # Use a hosted pool when possible.
      vmImage: 'windows-2019'
    strategy:
      matrix: 
        Debug:
          _BuildConfig: Debug
        Release:
          _BuildConfig: Release
    workspace:
      clean: all
    variables: 
      - name: CommonMSBuildArgs
        value: >-
          -c $(_BuildConfig)
          /p:OfficialBuildId=$(OfficialBuildId)
          /p:TargetArchitecture=${{ parameters.targetArchitecture }}
          /p:SkipTests=${{ parameters.skipTests }}
      - name: MsbuildSigningArguments
        value: /p:DotNetSignType=$(SignType)
      - name: TargetArchitecture
        value: ${{ parameters.targetArchitecture }}
      - name: _InternalRuntimeDownloadArgs
        value: ''

    steps:
    # NuGet's http cache lasts 30 minutes. If we're on a static machine, this may interfere with
    # auto-update PRs by preventing the CI build from fetching the new version. Delete the cache.
    - powershell: Remove-Item -Recurse -ErrorAction Ignore "$env:LocalAppData\NuGet\v3-cache"
      displayName: Clear NuGet http cache (if exists)

    - script: >-
        build.cmd -ci -test
        $(CommonMSBuildArgs)
        $(MsbuildSigningArguments)
        $(_InternalRuntimeDownloadArgs)
      displayName: Build

    - template: /eng/pipelines/steps/upload-job-artifacts-PR.yml
      parameters:
        name: ${{ parameters.name }}