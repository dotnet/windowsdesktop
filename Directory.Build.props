<Project>

  <Import Project="Sdk.props" Sdk="Microsoft.DotNet.Arcade.Sdk" />

  <PropertyGroup>
    <!-- Packaging properties -->
    <GitHubRepositoryName>windowsdesktop</GitHubRepositoryName>
    <RepositoryUrl>https://github.com/dotnet/$(GitHubRepositoryName)</RepositoryUrl>
    <PackageProjectUrl>https://dot.net</PackageProjectUrl>
    <Owners>microsoft,dotnetframework</Owners>
    <IncludeSymbols>true</IncludeSymbols>
    <LicenseFile>$(MSBuildThisFileDirectory)LICENSE</LicenseFile>
    <PackageLicenseExpression>MIT</PackageLicenseExpression>
    <PackageRequireLicenseAcceptance>false</PackageRequireLicenseAcceptance>
    <Copyright>$(CopyrightNetFoundation)</Copyright>
    <PackageThirdPartyNoticesFile>$(MSBuildThisFileDirectory)THIRD-PARTY-NOTICES.TXT</PackageThirdPartyNoticesFile>
    <PackageReleaseNotes>https://go.microsoft.com/fwlink/?LinkID=799421</PackageReleaseNotes>

    <!-- Floating TFM which is defined in Arcade -->
    <TargetFramework>$(NetCurrent)</TargetFramework>

    <!-- Set up handling of build warnings -->
    <WarningLevel>4</WarningLevel>
    <TreatWarningsAsErrors>true</TreatWarningsAsErrors>

    <!-- Platform detection -->
    <TargetArchitecture  Condition="'$(TargetArchitecture)' == ''">x64</TargetArchitecture>

    <!-- Build as portable by default -->
    <PortableBuild Condition="'$(PortableBuild)' == ''">true</PortableBuild>
  </PropertyGroup>

  <PropertyGroup>
    <HostOS>linux</HostOS>
    <HostOS Condition="$([MSBuild]::IsOSPlatform('OSX'))">osx</HostOS>
    <HostOS Condition="$([MSBuild]::IsOSPlatform('FREEBSD'))">freebsd</HostOS>
    <HostOS Condition="$([MSBuild]::IsOSPlatform('NETBSD'))">netbsd</HostOS>
    <HostOS Condition="$([MSBuild]::IsOSPlatform('ILLUMOS'))">illumos</HostOS>
    <HostOS Condition="$([MSBuild]::IsOSPlatform('SOLARIS'))">solaris</HostOS>
    <HostOS Condition="$([MSBuild]::IsOSPlatform('WINDOWS'))">windows</HostOS>

    <HostRuntimeIdentifier Condition="'$(MSBuildRuntimeType)' == 'core'">$([System.Runtime.InteropServices.RuntimeInformation]::RuntimeIdentifier)</HostRuntimeIdentifier>
    <HostRuntimeIdentifier Condition="'$(MSBuildRuntimeType)' != 'core'">win-$([System.Runtime.InteropServices.RuntimeInformation]::OSArchitecture.ToString().ToLowerInvariant)</HostRuntimeIdentifier>

    <RuntimeIdentifier Condition="'$(RuntimeIdentifier)' == ''">$(HostRuntimeIdentifier.Remove($(HostRuntimeIdentifier.LastIndexOf('-'))))-$(TargetArchitecture)</RuntimeIdentifier>
  </PropertyGroup>

  <PropertyGroup Condition="'$(PortableBuild)' == 'true'">
    <RuntimeIdentifier Condition="'$(HostOS)' == 'windows'">win-$(TargetArchitecture)</RuntimeIdentifier>
    <RuntimeIdentifier Condition="'$(HostOS)' == 'osx'">osx-$(TargetArchitecture)</RuntimeIdentifier>
    <RuntimeIdentifier Condition="'$(HostOS)' == 'linux'">linux-$(TargetArchitecture)</RuntimeIdentifier>
    <RuntimeIdentifier Condition="'$(HostOS)' == 'freebsd'">freebsd-$(TargetArchitecture)</RuntimeIdentifier>
  </PropertyGroup>

  <PropertyGroup>
    <InstallerRuntimeIdentifier Condition="'$(InstallerRuntimeIdentifier)' == ''">$(RuntimeIdentifier)</InstallerRuntimeIdentifier>
  </PropertyGroup>

</Project>
